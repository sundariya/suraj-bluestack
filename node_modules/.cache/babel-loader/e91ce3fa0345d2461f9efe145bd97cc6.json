{"ast":null,"code":"var _jsxFileName = \"/home/sundariya/work/bluestack/src/component/Header/Header.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport 'src/component/Header/Header.scss';\nimport { CHANGE_LANGUAGE } from \"src/store/actionConstant\";\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.changeLanguage = event => {\n      this.props.changeLanguage(event.target.value);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/new-logo-white.png',\n      className: \"logo\",\n      alt: \"header logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.changeLanguage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"en\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"English\"), React.createElement(\"option\", {\n      value: \"ger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"German\"))));\n  }\n\n}\n\nconst mapActionToDispatch = dispatch => {\n  return {\n    changeLanguage: language => dispatch({\n      type: CHANGE_LANGUAGE,\n      payload: language\n    })\n  };\n};\n\nexport default connect(null, mapActionToDispatch)(Header);","map":{"version":3,"sources":["/home/sundariya/work/bluestack/src/component/Header/Header.js"],"names":["React","Component","connect","CHANGE_LANGUAGE","Header","changeLanguage","event","props","target","value","render","process","env","PUBLIC_URL","mapActionToDispatch","dispatch","language","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,kCAAP;AACA,SAAQC,eAAR,QAA8B,0BAA9B;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE3BI,cAF2B,GAETC,KAAD,IAAW;AACxB,WAAKC,KAAL,CAAWF,cAAX,CAA0BC,KAAK,CAACE,MAAN,CAAaC,KAAvC;AACH,KAJ0B;AAAA;;AAM3BC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,qBAAnC;AAA0D,MAAA,SAAS,EAAC,MAApE;AAA2E,MAAA,GAAG,EAAC,aAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,QAAQ,EAAE,KAAKR,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,CAJJ,CADJ;AAaH;;AApB0B;;AAuB/B,MAAMS,mBAAmB,GAAIC,QAAD,IAAc;AACtC,SAAO;AACHV,IAAAA,cAAc,EAAGW,QAAD,IAAcD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEd,eAAP;AAAwBe,MAAAA,OAAO,EAAEF;AAAjC,KAAD;AADnC,GAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAAC,IAAD,EAAOY,mBAAP,CAAP,CAAmCV,MAAnC,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport 'src/component/Header/Header.scss';\nimport {CHANGE_LANGUAGE} from \"src/store/actionConstant\";\n\nclass Header extends Component {\n\n    changeLanguage = (event) => {\n        this.props.changeLanguage(event.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"header\">\n                <div>\n                    <img src={process.env.PUBLIC_URL + '/new-logo-white.png'} className=\"logo\" alt=\"header logo\"/>\n                </div>\n                <div className=\"pt-5\">\n                    <select onChange={this.changeLanguage}>\n                        <option value=\"en\">English</option>\n                        <option value=\"ger\">German</option>\n                    </select>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapActionToDispatch = (dispatch) => {\n    return {\n        changeLanguage: (language) => dispatch({type: CHANGE_LANGUAGE, payload: language})\n    }\n}\n\nexport default connect(null, mapActionToDispatch)(Header);"]},"metadata":{},"sourceType":"module"}